#!/usr/bin/env sh
# shellcheck disable=SC2039

print_usage() {
  local program="$1"
  local version="$2"
  local author="$3"

  echo "$program $version

    Logs the output of a program to a file

    USAGE:
        $program [FLAGS] [OPTIONS] [--] <PROG> [<ARG> ..]

    FLAGS:
        -h, --help      Prints help information
        -V, --version   Prints version information
        -v, --verbose   Prints verbose output

    OPTIONS:
        -p, --prefix=<OPTS>   Prefix name for the log file
                              [default: basename of program name]

    ARGS:
        <ARG>       Additional arguments passed to the program
        <PROGRAM>   Program to run

    AUTHOR:
        $author
    " | sed 's/^ \{1,4\}//g'
}

main() {
  set -eu
  if [ -n "${DEBUG:-}" ]; then set -v; fi
  if [ -n "${TRACE:-}" ]; then set -xv; fi

  local program version author
  program="$(basename "$0")"
  version="0.1.0"
  author="Fletcher Nichol <fnichol@nichol.ca>"

  # shellcheck source=lib/realpath.sh
  . "${0%/*}/../lib/realpath.sh"

  ROOT="$(realpath "${0%/*}/..")"

  # shellcheck source=vendor/lib/libsh.sh
  . "$ROOT/vendor/lib/libsh.sh"

  cli_invoke "$program" "$version" "$author" "$@"
}

cli_invoke() {
  local program version author prefix
  program="$1"
  shift
  version="$1"
  shift
  author="$1"
  shift

  VERBOSE=""

  OPTIND=1
  while getopts "hp:vV-:" arg; do
    case "$arg" in
      h)
        print_usage "$program" "$version" "$author"
        exit 0
        ;;
      p)
        prefix="$OPTARG"
        ;;
      v)
        VERBOSE=true
        ;;
      V)
        print_version "$program" "$version"
        exit 0
        ;;
      -)
        long_optarg="${OPTARG#*=}"
        case "$OPTARG" in
          help)
            print_usage "$program" "$version" "$author"
            exit 0
            ;;
          prefix=?*)
            prefix="$long_optarg"
            ;;
          prefix*)
            print_usage "$program" "$version" "$author"
            die "missing required argument for --$OPTARG option"
            ;;
          verbose)
            VERBOSE=true
            ;;
          version)
            print_version "$program" "$version" "true"
            exit 0
            ;;
          '')
            # "--" terminates argument processing
            break
            ;;
          *)
            print_usage "$program" "$version" "$author" >&2
            die "invalid argument --$OPTARG"
            ;;
        esac
        ;;
      \?)
        print_usage "$program" "$version" "$author" >&2
        die "invalid argument; arg=-$OPTARG"
        ;;
    esac
  done
  shift "$((OPTIND - 1))"

  if [ -z "${1:-}" ]; then
    print_usage "$program" "$version" "$author" >&2
    die "missing program argument"
  fi
  local program="$1"
  shift

  if [ -z "${prefix:-}" ]; then
    prefix="$(basename "$program")"
  fi

  log_program "$prefix" "$program" "$@"
}

log_program() {
  local prefix="$1"
  shift
  local program="$1"
  shift

  local timestamp
  timestamp="$(date -u +%FT%TZ)"

  exec 2>&1

  mkdir -p "$ROOT/log"
  if { script -h || true; } 2>&1 | grep -q '\-c[, \t]'; then
    if [ -n "$VERBOSE" ]; then set -x; fi
    exec script -c "$program $*" "$ROOT/log/${prefix}-$timestamp.log"
  else
    if [ -n "$VERBOSE" ]; then set -x; fi
    exec script "$ROOT/log/${prefix}-$timestamp.log" "$program" "$@"
  fi
}

main "$@"
